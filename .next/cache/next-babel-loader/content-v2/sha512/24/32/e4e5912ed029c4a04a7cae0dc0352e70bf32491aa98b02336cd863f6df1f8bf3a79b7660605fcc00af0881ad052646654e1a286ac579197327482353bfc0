{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/waleed/iwork/jobs/upwork/Matthew/gethired-company/src/components/Global/NotificationDropdown.tsx\";\nimport React, { useState, useEffect, useRef } from \"react\";\nimport { useRouter } from \"next/router\";\nimport Link from \"next/link\";\nimport cn from \"classnames\";\nimport { connect } from \"react-redux\";\n\nconst NotificationDropdown = ({\n  firstName,\n  lastName\n}) => {\n  let {\n    0: isOpen,\n    1: setIsOpen\n  } = useState(false);\n  let {\n    0: bellActive,\n    1: setBellActive\n  } = useState(false);\n  let {\n    0: bellMobActive,\n    1: setBellMobActive\n  } = useState(false);\n  let {\n    0: notifications,\n    1: setNotifications\n  } = useState([{\n    id: 1,\n    title: \"title 1\",\n    deliveredTime: \"1m ago\",\n    text: \"This is a notification!\"\n  }]);\n  const router = useRouter();\n  const node = useRef(null);\n\n  const handleClick = e => {\n    if (node.current.contains(e.target)) {\n      return;\n    }\n\n    setIsOpen(false);\n    setBellActive(false);\n    setBellMobActive(false);\n  };\n\n  useEffect(() => {\n    setNotifications(notifications);\n\n    if (router.pathname.includes(\"/notifications\")) {\n      setBellActive(true);\n    } else {\n      setBellActive(false);\n    }\n\n    document.addEventListener(\"mousedown\", handleClick);\n    return () => {\n      document.removeEventListener(\"mousedown\", handleClick);\n    };\n  }, []);\n\n  const showOverlay = () => {\n    if (isOpen) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"fixed bg-black left-0 right-0 bottom-0 top-0 opacity-20\",\n        style: {\n          marginTop: \"73px\",\n          zIndex: 99999999999999\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this);\n    } else {\n      return;\n    }\n  };\n\n  const activeBellMob = () => {\n    setIsOpen(isOpen = !isOpen);\n    isOpen ? setBellMobActive(true) : setBellMobActive(false);\n  };\n\n  const renderNotifications = notifications.map((notification, index) => {\n    if (index < 3) {\n      return /*#__PURE__*/_jsxDEV(React.Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex w-full px-6\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"w-full flex flex-wrap items-center\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"w-3/4 text-left\",\n              children: /*#__PURE__*/_jsxDEV(\"h1\", {\n                className: \"text-titles\",\n                children: notification.title\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 93,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"w-1/4 text-right\",\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"bg-transparent outline-none focus:outline-none text-primary text-sm\",\n                children: \"View\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 96,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"w-full\",\n              children: /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"font-sans text-secondary text-xs my-4 text-left\",\n                children: notification.text\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 101,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 100,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"w-full flex items-center\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"w-1/2 flex items-center\",\n                children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                  src: \"/img/notifications/clock-icon.svg\",\n                  alt: \"\",\n                  className: \"mr-2\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 107,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"text-secondary text-xs\",\n                  children: notification.deliveredTime\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 112,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 106,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"w-1/2 text-right\",\n                children: /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"bg-transparent outline-none focus:outline-none text-xs text-secondary\",\n                  children: \"Mark as Read\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 117,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 116,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 105,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"h-px w-full my-6\",\n          style: {\n            background: \"#efefef\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 11\n        }, this)]\n      }, notification.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this);\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [showOverlay(), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"relative\",\n      ref: node,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex items-center\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: cn(\"outline-none focus:outline-none mt-2 z-50\", {\n            \"active-notification pb-5\": bellActive || bellMobActive\n          }),\n          onClick: () => activeBellMob(),\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: \"/img/icons/bell-icon.svg\",\n            alt: \"\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"text-secondary mx-4 truncate text-sm mt-2 mr-0 z-40\",\n          children: [lastName !== undefined ? firstName + \" \" + lastName.charAt(0) : null, \".\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: cn(\"lg:absolute fixed bg-white border-t border-secondary-elements lg:-left-96 left-0 flex flex-wrap rounded-b-2xl lg:w-notifications-dropdown w-full lg:overflow-y-hidden overflow-y-scroll lg:h-auto h-full top-14 -mt-0.5\", {\n          hidden: isOpen === false,\n          block: isOpen === true\n        }),\n        style: {\n          zIndex: 99999999999999\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex w-full items-center pt-6 px-6\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"w-1/2 text-left\",\n            children: /*#__PURE__*/_jsxDEV(\"h1\", {\n              className: \"text-titles text-1xl\",\n              children: \"Notifications\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 165,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 164,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"w-1/2 text-right\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"text-secondary text-xs bg-transparent outline-none focus:outline-none\",\n              children: \"Mark All as Read\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 168,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 167,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"h-px w-full my-6\",\n          style: {\n            background: \"#efefef\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 11\n        }, this), renderNotifications, router.pathname !== \"/notifications\" ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"w-full mb-4 -mt-2 text-center lg:pb-0 md:pb-10 pb-16\",\n          children: /*#__PURE__*/_jsxDEV(Link, {\n            href: \"/notifications\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"bg-transparent outline-none focus:outline-none text-primary text-sm\",\n              children: \"See all Notifications\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 181,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 180,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"h-10 w-full\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\nconst mapStateToProps = state => ({\n  firstName: state.store.firstName,\n  lastName: state.store.lastName\n});\n\nexport default connect(mapStateToProps)(NotificationDropdown);","map":{"version":3,"sources":["/Users/waleed/iwork/jobs/upwork/Matthew/gethired-company/src/components/Global/NotificationDropdown.tsx"],"names":["React","useState","useEffect","useRef","useRouter","Link","cn","connect","NotificationDropdown","firstName","lastName","isOpen","setIsOpen","bellActive","setBellActive","bellMobActive","setBellMobActive","notifications","setNotifications","id","title","deliveredTime","text","router","node","handleClick","e","current","contains","target","pathname","includes","document","addEventListener","removeEventListener","showOverlay","marginTop","zIndex","activeBellMob","renderNotifications","map","notification","index","background","undefined","charAt","hidden","block","mapStateToProps","state","store"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,MAArC,QAAmD,OAAnD;AACA,SAASC,SAAT,QAA0B,aAA1B;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,EAAP,MAAe,YAAf;AACA,SAASC,OAAT,QAAwB,aAAxB;;AAqBA,MAAMC,oBAAqC,GAAG,CAAC;AAAEC,EAAAA,SAAF;AAAaC,EAAAA;AAAb,CAAD,KAA6B;AACzE,MAAI;AAAA,OAACC,MAAD;AAAA,OAASC;AAAT,MAAsBX,QAAQ,CAAU,KAAV,CAAlC;AACA,MAAI;AAAA,OAACY,UAAD;AAAA,OAAaC;AAAb,MAA8Bb,QAAQ,CAAU,KAAV,CAA1C;AACA,MAAI;AAAA,OAACc,aAAD;AAAA,OAAgBC;AAAhB,MAAoCf,QAAQ,CAAU,KAAV,CAAhD;AACA,MAAI;AAAA,OAACgB,aAAD;AAAA,OAAgBC;AAAhB,MAAoCjB,QAAQ,CAA0B,CACxE;AACEkB,IAAAA,EAAE,EAAE,CADN;AAEEC,IAAAA,KAAK,EAAE,SAFT;AAGEC,IAAAA,aAAa,EAAE,QAHjB;AAIEC,IAAAA,IAAI,EAAE;AAJR,GADwE,CAA1B,CAAhD;AASA,QAAMC,MAAM,GAAGnB,SAAS,EAAxB;AAEA,QAAMoB,IAAI,GAAGrB,MAAM,CAAM,IAAN,CAAnB;;AAEA,QAAMsB,WAAW,GAAIC,CAAD,IAAY;AAC9B,QAAIF,IAAI,CAACG,OAAL,CAAaC,QAAb,CAAsBF,CAAC,CAACG,MAAxB,CAAJ,EAAqC;AACnC;AACD;;AACDjB,IAAAA,SAAS,CAAC,KAAD,CAAT;AACAE,IAAAA,aAAa,CAAC,KAAD,CAAb;AACAE,IAAAA,gBAAgB,CAAC,KAAD,CAAhB;AACD,GAPD;;AASAd,EAAAA,SAAS,CAAC,MAAM;AACdgB,IAAAA,gBAAgB,CAACD,aAAD,CAAhB;;AAEA,QAAIM,MAAM,CAACO,QAAP,CAAgBC,QAAhB,CAAyB,gBAAzB,CAAJ,EAAgD;AAC9CjB,MAAAA,aAAa,CAAC,IAAD,CAAb;AACD,KAFD,MAEO;AACLA,MAAAA,aAAa,CAAC,KAAD,CAAb;AACD;;AAEDkB,IAAAA,QAAQ,CAACC,gBAAT,CAA0B,WAA1B,EAAuCR,WAAvC;AAEA,WAAO,MAAM;AACXO,MAAAA,QAAQ,CAACE,mBAAT,CAA6B,WAA7B,EAA0CT,WAA1C;AACD,KAFD;AAGD,GAdQ,EAcN,EAdM,CAAT;;AAgBA,QAAMU,WAAW,GAAG,MAAM;AACxB,QAAIxB,MAAJ,EAAY;AACV,0BACE;AACE,QAAA,SAAS,EAAC,yDADZ;AAEE,QAAA,KAAK,EAAE;AAAEyB,UAAAA,SAAS,EAAE,MAAb;AAAqBC,UAAAA,MAAM,EAAE;AAA7B;AAFT;AAAA;AAAA;AAAA;AAAA,cADF;AAMD,KAPD,MAOO;AACL;AACD;AACF,GAXD;;AAaA,QAAMC,aAAa,GAAG,MAAM;AAC1B1B,IAAAA,SAAS,CAAED,MAAM,GAAG,CAACA,MAAZ,CAAT;AACAA,IAAAA,MAAM,GAAGK,gBAAgB,CAAC,IAAD,CAAnB,GAA4BA,gBAAgB,CAAC,KAAD,CAAlD;AACD,GAHD;;AAKA,QAAMuB,mBAAmB,GAAGtB,aAAa,CAACuB,GAAd,CAAkB,CAACC,YAAD,EAAeC,KAAf,KAAyB;AACrE,QAAIA,KAAK,GAAG,CAAZ,EAAe;AACb,0BACE,QAAC,KAAD,CAAO,QAAP;AAAA,gCACE;AAAK,UAAA,SAAS,EAAC,kBAAf;AAAA,iCACE;AAAK,YAAA,SAAS,EAAC,oCAAf;AAAA,oCACE;AAAK,cAAA,SAAS,EAAC,iBAAf;AAAA,qCACE;AAAI,gBAAA,SAAS,EAAC,aAAd;AAAA,0BAA6BD,YAAY,CAACrB;AAA1C;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,oBADF,eAIE;AAAK,cAAA,SAAS,EAAC,kBAAf;AAAA,qCACE;AAAQ,gBAAA,SAAS,EAAC,qEAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,oBAJF,eASE;AAAK,cAAA,SAAS,EAAC,QAAf;AAAA,qCACE;AAAG,gBAAA,SAAS,EAAC,iDAAb;AAAA,0BACGqB,YAAY,CAACnB;AADhB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,oBATF,eAcE;AAAK,cAAA,SAAS,EAAC,0BAAf;AAAA,sCACE;AAAK,gBAAA,SAAS,EAAC,yBAAf;AAAA,wCACE;AACE,kBAAA,GAAG,EAAC,mCADN;AAEE,kBAAA,GAAG,EAAC,EAFN;AAGE,kBAAA,SAAS,EAAC;AAHZ;AAAA;AAAA;AAAA;AAAA,wBADF,eAME;AAAG,kBAAA,SAAS,EAAC,wBAAb;AAAA,4BACGmB,YAAY,CAACpB;AADhB;AAAA;AAAA;AAAA;AAAA,wBANF;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,eAWE;AAAK,gBAAA,SAAS,EAAC,kBAAf;AAAA,uCACE;AAAQ,kBAAA,SAAS,EAAC,uEAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,sBAXF;AAAA;AAAA;AAAA;AAAA;AAAA,oBAdF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBADF,eAmCE;AACE,UAAA,SAAS,EAAC,kBADZ;AAEE,UAAA,KAAK,EAAE;AAAEsB,YAAAA,UAAU,EAAE;AAAd;AAFT;AAAA;AAAA;AAAA;AAAA,gBAnCF;AAAA,SAAqBF,YAAY,CAACtB,EAAlC;AAAA;AAAA;AAAA;AAAA,cADF;AA0CD;AACF,GA7C2B,CAA5B;AA+CA,sBACE;AAAA,eACGgB,WAAW,EADd,eAEE;AAAK,MAAA,SAAS,EAAC,UAAf;AAA0B,MAAA,GAAG,EAAEX,IAA/B;AAAA,8BACE;AAAK,QAAA,SAAS,EAAC,mBAAf;AAAA,gCACE;AACE,UAAA,SAAS,EAAElB,EAAE,CAAC,2CAAD,EAA8C;AACzD,wCAA4BO,UAAU,IAAIE;AADe,WAA9C,CADf;AAIE,UAAA,OAAO,EAAE,MAAMuB,aAAa,EAJ9B;AAAA,iCAME;AAAK,YAAA,GAAG,EAAC,0BAAT;AAAoC,YAAA,GAAG,EAAC;AAAxC;AAAA;AAAA;AAAA;AAAA;AANF;AAAA;AAAA;AAAA;AAAA,gBADF,eASE;AAAM,UAAA,SAAS,EAAC,qDAAhB;AAAA,qBACG5B,QAAQ,KAAKkC,SAAb,GACGnC,SAAS,GAAG,GAAZ,GAAkBC,QAAQ,CAACmC,MAAT,CAAgB,CAAhB,CADrB,GAEG,IAHN;AAAA;AAAA;AAAA;AAAA;AAAA,gBATF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAiBE;AACE,QAAA,SAAS,EAAEvC,EAAE,CACX,yNADW,EAEX;AACEwC,UAAAA,MAAM,EAAEnC,MAAM,KAAK,KADrB;AAEEoC,UAAAA,KAAK,EAAEpC,MAAM,KAAK;AAFpB,SAFW,CADf;AAQE,QAAA,KAAK,EAAE;AAAE0B,UAAAA,MAAM,EAAE;AAAV,SART;AAAA,gCAUE;AAAK,UAAA,SAAS,EAAC,oCAAf;AAAA,kCACE;AAAK,YAAA,SAAS,EAAC,iBAAf;AAAA,mCACE;AAAI,cAAA,SAAS,EAAC,sBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBADF,eAIE;AAAK,YAAA,SAAS,EAAC,kBAAf;AAAA,mCACE;AAAQ,cAAA,SAAS,EAAC,uEAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBAJF;AAAA;AAAA;AAAA;AAAA;AAAA,gBAVF,eAoBE;AACE,UAAA,SAAS,EAAC,kBADZ;AAEE,UAAA,KAAK,EAAE;AAAEM,YAAAA,UAAU,EAAE;AAAd;AAFT;AAAA;AAAA;AAAA;AAAA,gBApBF,EAwBGJ,mBAxBH,EAyBGhB,MAAM,CAACO,QAAP,KAAoB,gBAApB,gBACC;AAAK,UAAA,SAAS,EAAC,sDAAf;AAAA,iCACE,QAAC,IAAD;AAAM,YAAA,IAAI,EAAC,gBAAX;AAAA,mCACE;AAAQ,cAAA,SAAS,EAAC,qEAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBADD,gBASC;AAAK,UAAA,SAAS,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA,gBAlCJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAjBF;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA,kBADF;AA4DD,CAvKD;;AAyKA,MAAMkB,eAAe,GAAIC,KAAD,KAAyB;AAC/CxC,EAAAA,SAAS,EAAEwC,KAAK,CAACC,KAAN,CAAYzC,SADwB;AAE/CC,EAAAA,QAAQ,EAAEuC,KAAK,CAACC,KAAN,CAAYxC;AAFyB,CAAzB,CAAxB;;AAKA,eAAeH,OAAO,CAACyC,eAAD,CAAP,CAAyBxC,oBAAzB,CAAf","sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\nimport { useRouter } from \"next/router\";\nimport Link from \"next/link\";\nimport cn from \"classnames\";\nimport { connect } from \"react-redux\";\n\ninterface CPFromRedux {\n  store: {\n    firstName: string;\n    lastName: string;\n  };\n}\n\ninterface NotificationStructure {\n  id: number;\n  title: string;\n  deliveredTime: string;\n  text: string;\n}\n\ntype Props = {\n  firstName?: string;\n  lastName?: string;\n};\n\nconst NotificationDropdown: React.FC<Props> = ({ firstName, lastName }) => {\n  let [isOpen, setIsOpen] = useState<boolean>(false);\n  let [bellActive, setBellActive] = useState<boolean>(false);\n  let [bellMobActive, setBellMobActive] = useState<boolean>(false);\n  let [notifications, setNotifications] = useState<[NotificationStructure]>([\n    {\n      id: 1,\n      title: \"title 1\",\n      deliveredTime: \"1m ago\",\n      text: \"This is a notification!\",\n    },\n  ]);\n\n  const router = useRouter();\n\n  const node = useRef<any>(null);\n\n  const handleClick = (e: any) => {\n    if (node.current.contains(e.target)) {\n      return;\n    }\n    setIsOpen(false);\n    setBellActive(false);\n    setBellMobActive(false);\n  };\n\n  useEffect(() => {\n    setNotifications(notifications);\n\n    if (router.pathname.includes(\"/notifications\")) {\n      setBellActive(true);\n    } else {\n      setBellActive(false);\n    }\n\n    document.addEventListener(\"mousedown\", handleClick);\n\n    return () => {\n      document.removeEventListener(\"mousedown\", handleClick);\n    };\n  }, []);\n\n  const showOverlay = () => {\n    if (isOpen) {\n      return (\n        <div\n          className=\"fixed bg-black left-0 right-0 bottom-0 top-0 opacity-20\"\n          style={{ marginTop: \"73px\", zIndex: 99999999999999 }}\n        ></div>\n      );\n    } else {\n      return;\n    }\n  };\n\n  const activeBellMob = () => {\n    setIsOpen((isOpen = !isOpen));\n    isOpen ? setBellMobActive(true) : setBellMobActive(false);\n  };\n\n  const renderNotifications = notifications.map((notification, index) => {\n    if (index < 3) {\n      return (\n        <React.Fragment key={notification.id}>\n          <div className=\"flex w-full px-6\">\n            <div className=\"w-full flex flex-wrap items-center\">\n              <div className=\"w-3/4 text-left\">\n                <h1 className=\"text-titles\">{notification.title}</h1>\n              </div>\n              <div className=\"w-1/4 text-right\">\n                <button className=\"bg-transparent outline-none focus:outline-none text-primary text-sm\">\n                  View\n                </button>\n              </div>\n              <div className=\"w-full\">\n                <p className=\"font-sans text-secondary text-xs my-4 text-left\">\n                  {notification.text}\n                </p>\n              </div>\n              <div className=\"w-full flex items-center\">\n                <div className=\"w-1/2 flex items-center\">\n                  <img\n                    src=\"/img/notifications/clock-icon.svg\"\n                    alt=\"\"\n                    className=\"mr-2\"\n                  />\n                  <p className=\"text-secondary text-xs\">\n                    {notification.deliveredTime}\n                  </p>\n                </div>\n                <div className=\"w-1/2 text-right\">\n                  <button className=\"bg-transparent outline-none focus:outline-none text-xs text-secondary\">\n                    Mark as Read\n                  </button>\n                </div>\n              </div>\n            </div>\n          </div>\n          <div\n            className=\"h-px w-full my-6\"\n            style={{ background: \"#efefef\" }}\n          ></div>\n        </React.Fragment>\n      );\n    }\n  });\n\n  return (\n    <>\n      {showOverlay()}\n      <div className=\"relative\" ref={node}>\n        <div className=\"flex items-center\">\n          <button\n            className={cn(\"outline-none focus:outline-none mt-2 z-50\", {\n              \"active-notification pb-5\": bellActive || bellMobActive,\n            })}\n            onClick={() => activeBellMob()}\n          >\n            <img src=\"/img/icons/bell-icon.svg\" alt=\"\" />\n          </button>\n          <span className=\"text-secondary mx-4 truncate text-sm mt-2 mr-0 z-40\">\n            {lastName !== undefined\n              ? firstName + \" \" + lastName.charAt(0)\n              : null}\n            .\n          </span>\n        </div>\n        <div\n          className={cn(\n            \"lg:absolute fixed bg-white border-t border-secondary-elements lg:-left-96 left-0 flex flex-wrap rounded-b-2xl lg:w-notifications-dropdown w-full lg:overflow-y-hidden overflow-y-scroll lg:h-auto h-full top-14 -mt-0.5\",\n            {\n              hidden: isOpen === false,\n              block: isOpen === true,\n            }\n          )}\n          style={{ zIndex: 99999999999999 }}\n        >\n          <div className=\"flex w-full items-center pt-6 px-6\">\n            <div className=\"w-1/2 text-left\">\n              <h1 className=\"text-titles text-1xl\">Notifications</h1>\n            </div>\n            <div className=\"w-1/2 text-right\">\n              <button className=\"text-secondary text-xs bg-transparent outline-none focus:outline-none\">\n                Mark All as Read\n              </button>\n            </div>\n          </div>\n          <div\n            className=\"h-px w-full my-6\"\n            style={{ background: \"#efefef\" }}\n          ></div>\n          {renderNotifications}\n          {router.pathname !== \"/notifications\" ? (\n            <div className=\"w-full mb-4 -mt-2 text-center lg:pb-0 md:pb-10 pb-16\">\n              <Link href=\"/notifications\">\n                <button className=\"bg-transparent outline-none focus:outline-none text-primary text-sm\">\n                  See all Notifications\n                </button>\n              </Link>\n            </div>\n          ) : (\n            <div className=\"h-10 w-full\"></div>\n          )}\n        </div>\n      </div>\n    </>\n  );\n};\n\nconst mapStateToProps = (state: CPFromRedux) => ({\n  firstName: state.store.firstName,\n  lastName: state.store.lastName,\n});\n\nexport default connect(mapStateToProps)(NotificationDropdown);\n"]},"metadata":{},"sourceType":"module"}