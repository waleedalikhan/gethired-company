{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/waleed/iwork/jobs/upwork/Matthew/gethired-company/src/pages/_document.tsx\";\nimport React from 'react';\nimport Document, { Html, Head, Main, NextScript } from 'next/document';\nexport default class MyDocument extends Document {\n  render() {\n    return /*#__PURE__*/_jsxDEV(Html, {\n      lang: \"en\",\n      children: [/*#__PURE__*/_jsxDEV(Head, {\n        children: /*#__PURE__*/_jsxDEV(\"meta\", {\n          charSet: \"utf-8\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 9,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 8,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"body\", {\n        children: [/*#__PURE__*/_jsxDEV(Main, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 12,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(NextScript, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 13,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"script\", {\n          src: \"https://kit.fontawesome.com/2def6b71ee.js\",\n          crossOrigin: \"anonymous\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 14,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 7\n    }, this);\n  }\n\n} // `getInitialProps` belongs to `_document` (instead of `_app`),\n// it's compatible with server-side generation (SSG).\n// MyDocument.getInitialProps = async (ctx) => {\n// Resolution order\n//\n// On the server:\n// 1. app.getInitialProps\n// 2. page.getInitialProps\n// 3. document.getInitialProps\n// 4. app.render\n// 5. page.render\n// 6. document.render\n//\n// On the server with error:\n// 1. document.getInitialProps\n// 2. app.render\n// 3. page.render\n// 4. document.render\n//\n// On the client\n// 1. app.getInitialProps\n// 2. page.getInitialProps\n// 3. app.render\n// 4. page.render\n// Render app and page and get the context of the page with collected side effects.\n//   const sheets = new ServerStyleSheets();\n//   const originalRenderPage = ctx.renderPage;\n//   ctx.renderPage = () =>\n//     originalRenderPage({\n//       enhanceApp: (App) => (props) => sheets.collect(<App {...props} />),\n//     });\n//   const initialProps = await Document.getInitialProps(ctx);\n//   return {\n//     ...initialProps,\n//     // Styles fragment is rendered after the app and page rendering finish.\n//     styles: [...React.Children.toArray(initialProps.styles), sheets.getStyleElement()],\n//   };\n// };","map":{"version":3,"sources":["/Users/waleed/iwork/jobs/upwork/Matthew/gethired-company/src/pages/_document.tsx"],"names":["React","Document","Html","Head","Main","NextScript","MyDocument","render"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,IAAmBC,IAAnB,EAAyBC,IAAzB,EAA+BC,IAA/B,EAAqCC,UAArC,QAAuD,eAAvD;AAEA,eAAe,MAAMC,UAAN,SAAyBL,QAAzB,CAAkC;AAC/CM,EAAAA,MAAM,GAAG;AACP,wBACE,QAAC,IAAD;AAAM,MAAA,IAAI,EAAC,IAAX;AAAA,8BACE,QAAC,IAAD;AAAA,+BACE;AAAM,UAAA,OAAO,EAAC;AAAd;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF,eAIE;AAAA,gCACE,QAAC,IAAD;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA,gBAFF,eAGE;AAAQ,UAAA,GAAG,EAAC,2CAAZ;AAAwD,UAAA,WAAW,EAAC;AAApE;AAAA;AAAA;AAAA;AAAA,gBAHF;AAAA;AAAA;AAAA;AAAA;AAAA,cAJF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAYD;;AAd8C,C,CAiBjD;AACA;AACA;AACE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACF;AACA;AAEA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import React from 'react';\nimport Document, { Html, Head, Main, NextScript } from 'next/document';\n\nexport default class MyDocument extends Document {\n  render() {\n    return (\n      <Html lang=\"en\">\n        <Head>\n          <meta charSet=\"utf-8\" />\n        </Head>\n        <body>\n          <Main />\n          <NextScript />\n          <script src=\"https://kit.fontawesome.com/2def6b71ee.js\" crossOrigin=\"anonymous\"></script>\n        </body>\n      </Html>\n    );\n  }\n}\n\n// `getInitialProps` belongs to `_document` (instead of `_app`),\n// it's compatible with server-side generation (SSG).\n// MyDocument.getInitialProps = async (ctx) => {\n  // Resolution order\n  //\n  // On the server:\n  // 1. app.getInitialProps\n  // 2. page.getInitialProps\n  // 3. document.getInitialProps\n  // 4. app.render\n  // 5. page.render\n  // 6. document.render\n  //\n  // On the server with error:\n  // 1. document.getInitialProps\n  // 2. app.render\n  // 3. page.render\n  // 4. document.render\n  //\n  // On the client\n  // 1. app.getInitialProps\n  // 2. page.getInitialProps\n  // 3. app.render\n  // 4. page.render\n\n  // Render app and page and get the context of the page with collected side effects.\n//   const sheets = new ServerStyleSheets();\n//   const originalRenderPage = ctx.renderPage;\n\n//   ctx.renderPage = () =>\n//     originalRenderPage({\n//       enhanceApp: (App) => (props) => sheets.collect(<App {...props} />),\n//     });\n\n//   const initialProps = await Document.getInitialProps(ctx);\n\n//   return {\n//     ...initialProps,\n//     // Styles fragment is rendered after the app and page rendering finish.\n//     styles: [...React.Children.toArray(initialProps.styles), sheets.getStyleElement()],\n//   };\n// };"]},"metadata":{},"sourceType":"module"}