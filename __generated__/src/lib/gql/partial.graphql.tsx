/* e91f9307997138e6cb21f631608286338ab1ab34
 * This file is automatically generated by graphql-let. */

import { gql } from '@apollo/client';
export type Maybe<T> = T | null;
export type Exact<T extends { [key: string]: unknown }> = { [K in keyof T]: T[K] };
export type MakeOptional<T, K extends keyof T> = Omit<T, K> & { [SubKey in K]?: Maybe<T[SubKey]> };
export type MakeMaybe<T, K extends keyof T> = Omit<T, K> & { [SubKey in K]: Maybe<T[SubKey]> };
/** All built-in and custom scalars, mapped to their actual values */
export type Scalars = {
  ID: string;
  String: string;
  Boolean: boolean;
  Int: number;
  Float: number;
};

export type News = {
  __typename?: 'News';
  id: Scalars['ID'];
  title: Scalars['String'];
  slug: Scalars['String'];
  desc: Scalars['String'];
};

export type Post = {
  __typename?: 'Post';
  id: Scalars['ID'];
  title: Scalars['String'];
  slug: Scalars['String'];
  desc: Scalars['String'];
};

export type Query = {
  __typename?: 'Query';
  viewer: User;
  post: Post;
  news: News;
};

export type Mutation = {
  __typename?: 'Mutation';
  updateName: User;
  updatePost: Post;
};


export type MutationUpdateNameArgs = {
  name: Scalars['String'];
};


export type MutationUpdatePostArgs = {
  title: Scalars['String'];
};

export type User = {
  __typename?: 'User';
  id: Scalars['ID'];
  name: Scalars['String'];
  status: Scalars['String'];
};

export type UserPartialFragment = (
  { __typename?: 'User' }
  & Pick<User, 'id' | 'name'>
);

export type PostPartialFragment = (
  { __typename?: 'Post' }
  & Pick<Post, 'id' | 'title' | 'slug'>
);

export const UserPartialFragmentDoc = gql`
    fragment userPartial on User {
  id
  name
}
    `;
export const PostPartialFragmentDoc = gql`
    fragment postPartial on Post {
  id
  title
  slug
}
    `;