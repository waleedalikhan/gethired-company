/* e91f9307997138e6cb21f631608286338ab1ab34
 * This file is automatically generated by graphql-let. */

export declare type Maybe<T> = T | null;
export declare type Exact<T extends {
    [key: string]: unknown;
}> = {
    [K in keyof T]: T[K];
};
export declare type MakeOptional<T, K extends keyof T> = Omit<T, K> & {
    [SubKey in K]?: Maybe<T[SubKey]>;
};
export declare type MakeMaybe<T, K extends keyof T> = Omit<T, K> & {
    [SubKey in K]: Maybe<T[SubKey]>;
};
/** All built-in and custom scalars, mapped to their actual values */
export declare type Scalars = {
    ID: string;
    String: string;
    Boolean: boolean;
    Int: number;
    Float: number;
};
export declare type News = {
    __typename?: 'News';
    id: Scalars['ID'];
    title: Scalars['String'];
    slug: Scalars['String'];
    desc: Scalars['String'];
};
export declare type Post = {
    __typename?: 'Post';
    id: Scalars['ID'];
    title: Scalars['String'];
    slug: Scalars['String'];
    desc: Scalars['String'];
};
export declare type Query = {
    __typename?: 'Query';
    viewer: User;
    post: Post;
    news: News;
};
export declare type Mutation = {
    __typename?: 'Mutation';
    updateName: User;
    updatePost: Post;
};
export declare type MutationUpdateNameArgs = {
    name: Scalars['String'];
};
export declare type MutationUpdatePostArgs = {
    title: Scalars['String'];
};
export declare type User = {
    __typename?: 'User';
    id: Scalars['ID'];
    name: Scalars['String'];
    status: Scalars['String'];
};
export declare type UserPartialFragment = ({
    __typename?: 'User';
} & Pick<User, 'id' | 'name'>);
export declare type PostPartialFragment = ({
    __typename?: 'Post';
} & Pick<Post, 'id' | 'title' | 'slug'>);
export declare const UserPartialFragmentDoc: import("@apollo/client").DocumentNode;
export declare const PostPartialFragmentDoc: import("@apollo/client").DocumentNode;
